<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdultOnlyHolidays_Name" xml:space="preserve">
    <value>Adult Only Holidays</value>
  </data>
  <data name="Backpacking_Description" xml:space="preserve">
    <value>It is the outdoor recreation of carrying personal things on your back while walking for more than a day. It is often, but not always, a long trip and may or may not involve camping outdoors.</value>
  </data>
  <data name="Backpacking_Name" xml:space="preserve">
    <value>Backpacking</value>
  </data>
  <data name="BeachWaterSports_Name" xml:space="preserve">
    <value>Beach / Water Sports</value>
  </data>
  <data name="Camping_Description" xml:space="preserve">
    <value>A place with temporary accommodation of huts, tents or other structures, normally used by soldiers, refugees, prisoners or travelers</value>
  </data>
  <data name="Camping_Name" xml:space="preserve">
    <value>Camping</value>
  </data>
  <data name="CityBreak_Name" xml:space="preserve">
    <value>City Break</value>
  </data>
  <data name="CouchSurfing_Description" xml:space="preserve">
    <value>The practice of traveling and staying with people you don't know, who advertise their homes on the internet</value>
  </data>
  <data name="CouchSurfing_Name" xml:space="preserve">
    <value>Couch Surfing</value>
  </data>
  <data name="CountrysideBreak_Name" xml:space="preserve">
    <value>Countryside Break</value>
  </data>
  <data name="CruiseHolidays_Name" xml:space="preserve">
    <value>Cruise Holidays</value>
  </data>
  <data name="ExploringExoticAdventurousPlaces_Name" xml:space="preserve">
    <value>Exploring Exotic Adventurous Places</value>
  </data>
  <data name="HomeSwap_Description" xml:space="preserve">
    <value>An arrangement where two families switch homes on vacation</value>
  </data>
  <data name="HomeSwap_Name" xml:space="preserve">
    <value>Home Swap</value>
  </data>
  <data name="JustStayingHome_Name" xml:space="preserve">
    <value>Just Staying Home</value>
  </data>
  <data name="LakesMountains_Name" xml:space="preserve">
    <value>Lakes / Mountains</value>
  </data>
  <data name="MusicEventsFestivals_Name" xml:space="preserve">
    <value>Music / Events Festivals</value>
  </data>
  <data name="OutdoorSportingActivities_Name" xml:space="preserve">
    <value>Outdoor Sporting Activities</value>
  </data>
  <data name="RelaxingWellness_Name" xml:space="preserve">
    <value>Relaxing / Wellness</value>
  </data>
  <data name="RoadTtrips_Name" xml:space="preserve">
    <value>Road Ttrips</value>
  </data>
  <data name="Safaris_Name" xml:space="preserve">
    <value>Safaris</value>
  </data>
  <data name="SportHolidays_Name" xml:space="preserve">
    <value>Sport Holidays</value>
  </data>
  <data name="TrainJourneys_Name" xml:space="preserve">
    <value>Train Journeys</value>
  </data>
  <data name="VisitingFamily_Name" xml:space="preserve">
    <value>Visiting Family</value>
  </data>
  <data name="VisitingFamousLandmarks_Name" xml:space="preserve">
    <value>Visiting Famous Landmarks</value>
  </data>
</root>