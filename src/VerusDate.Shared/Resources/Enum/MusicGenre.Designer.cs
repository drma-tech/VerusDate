//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VerusDate.Shared.Resources.Enum {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MusicGenre {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MusicGenre() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VerusDate.Shared.Resources.Enum.MusicGenre", typeof(MusicGenre).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Alternative Rock • College Rock • Experimental Rock • Goth Rock • Grunge • Hardcore Punk • Hard Rock • Indie Rock • New Wave • Progressive Rock • Punk • Shoegaze • Steampunk.
        /// </summary>
        internal static string Alternative_Description {
            get {
                return ResourceManager.GetString("Alternative_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alternative.
        /// </summary>
        internal static string Alternative_Name {
            get {
                return ResourceManager.GetString("Alternative_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Acoustic Blues • Chicago Blues • Classic Blues • Contemporary Blues • Country Blues • Delta Blues • Electric Blues.
        /// </summary>
        internal static string Blues_Description {
            get {
                return ResourceManager.GetString("Blues_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blues.
        /// </summary>
        internal static string Blues_Name {
            get {
                return ResourceManager.GetString("Blues_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Lullabies • Sing-Along • Stories.
        /// </summary>
        internal static string Childrens_Description {
            get {
                return ResourceManager.GetString("Childrens_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Children.
        /// </summary>
        internal static string Childrens_Name {
            get {
                return ResourceManager.GetString("Childrens_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: CCM • Christian Metal • Christian Pop • Christian Rap • Christian Rock • Classic Christian • Contemporary Gospel • Gospel • Christian &amp; Gospel • Praise &amp; Worship • Qawwali • Southern Gospel • Traditional Gospel.
        /// </summary>
        internal static string Christian_Description {
            get {
                return ResourceManager.GetString("Christian_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Christian.
        /// </summary>
        internal static string Christian_Name {
            get {
                return ResourceManager.GetString("Christian_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Avant-Garde • Baroque • Chamber Music • Chant • Choral • Classical Crossover • Early Music • High Classical • Impressionist • Medieval • Minimalism • Modern Composition • Opera • Orchestral • Renaissance • Romantic • Wedding Music.
        /// </summary>
        internal static string Classical_Description {
            get {
                return ResourceManager.GetString("Classical_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classical.
        /// </summary>
        internal static string Classical_Name {
            get {
                return ResourceManager.GetString("Classical_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Alternative Country • Americana • Bluegrass • Contemporary Bluegrass • Contemporary Country • Country Gospel • Honky Tonk • Outlaw Country • Traditional Bluegrass • Traditional Country • Urban Cowboy.
        /// </summary>
        internal static string Country_Description {
            get {
                return ResourceManager.GetString("Country_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country.
        /// </summary>
        internal static string Country_Name {
            get {
                return ResourceManager.GetString("Country_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Breakbeat • Dubstep • Exercise • Garage • Hardcore • Hard Dance • Hi-NRG / Eurodance • House • Jackin House • Jungle • Drum N Bass • Techno • Trance.
        /// </summary>
        internal static string Electronic_Description {
            get {
                return ResourceManager.GetString("Electronic_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Electronic.
        /// </summary>
        internal static string Electronic_Name {
            get {
                return ResourceManager.GetString("Electronic_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Folk metal • Folk rock • Neo-Folk • Anti-folk • Indie Folk • Folk Punk • Contemporary Folk • Progressive Folk • Folk Country • Psychedelic Folk • Americana • Skiffle • Ballads.
        /// </summary>
        internal static string Folk_Description {
            get {
                return ResourceManager.GetString("Folk_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folk.
        /// </summary>
        internal static string Folk_Name {
            get {
                return ResourceManager.GetString("Folk_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Alternative Rap • Bounce • Dirty South • East Coast Rap • Gangsta Rap • Hardcore Rap • Hip-Hop • Latin Rap • Old School Rap • Rap • Underground Rap • West Coast Rap • Mumble Rap.
        /// </summary>
        internal static string HipHopRap_Description {
            get {
                return ResourceManager.GetString("HipHopRap_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hip-Hop/Rap.
        /// </summary>
        internal static string HipHopRap_Name {
            get {
                return ResourceManager.GetString("HipHopRap_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Acid Jazz • Avant-Garde Jazz • Big Band • Blue Note • Contemporary Jazz • Easy Listening • Crossover Jazz • Dixieland • Ethio-Jazz Fusion • Hard Bop • Latin Jazz • Mainstream Jazz • Ragtime • Smooth Jazz • Trad Jazz.
        /// </summary>
        internal static string Jazz_Description {
            get {
                return ResourceManager.GetString("Jazz_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jazz.
        /// </summary>
        internal static string Jazz_Name {
            get {
                return ResourceManager.GetString("Jazz_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Alternativo &amp; Rock Latino • Baladas y Boleros • Brazilian • Contemporary Latin • Latin Jazz • Pop Latino • Raíces • Reggaeton y Hip-Hop • Regional Mexicano • Salsa • Tropical • Bachata • Rumba • Tango.
        /// </summary>
        internal static string Latino_Description {
            get {
                return ResourceManager.GetString("Latino_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latino.
        /// </summary>
        internal static string Latino_Name {
            get {
                return ResourceManager.GetString("Latino_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Environmental • Healing • Meditation • Nature • Relaxation • Travel.
        /// </summary>
        internal static string NewAge_Description {
            get {
                return ResourceManager.GetString("NewAge_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Age.
        /// </summary>
        internal static string NewAge_Name {
            get {
                return ResourceManager.GetString("NewAge_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Baroque Pop • Country Pop • Contemporary R&amp;B • Cowboy Pop • Dancehall Pop • Electropop •emo Pop • Folk-Pop • Hip-Pop • Indie Pop • Pop Punk • Pop Rap • Ambient Pop • Pop Rock • Power Pop • Psychedelic Pop • Space Age Pop • Worldbeat • K Pop.
        /// </summary>
        internal static string Pop_Description {
            get {
                return ResourceManager.GetString("Pop_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pop.
        /// </summary>
        internal static string Pop_Name {
            get {
                return ResourceManager.GetString("Pop_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Contemporary R&amp;B • Disco • Doo Wop • Funk • Motown • Neo-Soul • Quiet Storm • Soul.
        /// </summary>
        internal static string RB_Description {
            get {
                return ResourceManager.GetString("RB_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R&amp;B.
        /// </summary>
        internal static string RB_Name {
            get {
                return ResourceManager.GetString("RB_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Dancehall • Dub • Roots Reggae • Ska • Mento • Reggaestep • Gospel Reggae • Contemporary Reggae.
        /// </summary>
        internal static string Reggae_Description {
            get {
                return ResourceManager.GetString("Reggae_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reggae.
        /// </summary>
        internal static string Reggae_Name {
            get {
                return ResourceManager.GetString("Reggae_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-Genres: Adult Alternative • American Rock • Arena Rock • Blues-Rock • British Invasion • Death Metal/Black Metal • Glam Rock • Hair Metal • Hard Rock ! Metal • Jam Bands • Prog-Rock/Art Rock • Psychedelic • Rock &amp; Roll • Rockabilly • Roots Rock • Singer/Songwriter • Classic Rock • Southern Rock.
        /// </summary>
        internal static string Rock_Description {
            get {
                return ResourceManager.GetString("Rock_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rock.
        /// </summary>
        internal static string Rock_Name {
            get {
                return ResourceManager.GetString("Rock_Name", resourceCulture);
            }
        }
    }
}
