<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Biography_Description" xml:space="preserve">
    <value>A narrative of a person's life; when the author is also the main subject, this is an autobiography or memoir</value>
  </data>
  <data name="Biography_Name" xml:space="preserve">
    <value>Biography</value>
  </data>
  <data name="Comics_Description" xml:space="preserve">
    <value>A magazine that features a serialized story in the form of a comic book, typically featuring the adventures of a superhero.</value>
  </data>
  <data name="Comics_Name" xml:space="preserve">
    <value>Comics</value>
  </data>
  <data name="Essay_Description" xml:space="preserve">
    <value>A short literary composition that reflects the author's perspective or point of view</value>
  </data>
  <data name="Essay_Name" xml:space="preserve">
    <value>Essay</value>
  </data>
  <data name="FictionGenres_Description" xml:space="preserve">
    <value>Fiction is generally a narrative form, in any medium, consisting of people, events, or places that are imaginary, in other words, not based strictly on history or fact.</value>
  </data>
  <data name="FictionGenres_Name" xml:space="preserve">
    <value>Fiction Genres</value>
  </data>
  <data name="Journalism_Description" xml:space="preserve">
    <value>News reporting and current events</value>
  </data>
  <data name="Journalism_Name" xml:space="preserve">
    <value>Journalism</value>
  </data>
  <data name="Memoir_Description" xml:space="preserve">
    <value>Factual story that focuses on a meaningful relationship between the writer and a person, place, or object; reads like a little novel</value>
  </data>
  <data name="Memoir_Name" xml:space="preserve">
    <value>Memoir</value>
  </data>
  <data name="NarrativeNonfictionPersonalNarrative_Description" xml:space="preserve">
    <value>Factual information about a significant event presented in a format that tells a story</value>
  </data>
  <data name="NarrativeNonfictionPersonalNarrative_Name" xml:space="preserve">
    <value>Narrative Nonfiction / Personal Narrative</value>
  </data>
  <data name="Reference_Description" xml:space="preserve">
    <value>Like a dictionary, thesaurus, encyclopedia, almanac or atlas</value>
  </data>
  <data name="Reference_Name" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="ScientificArticle_Description" xml:space="preserve">
    <value>Scientific study report, including in social, natural or other academic disciplines</value>
  </data>
  <data name="ScientificArticle_Name" xml:space="preserve">
    <value>Scientific Article</value>
  </data>
  <data name="SelfHelp_Description" xml:space="preserve">
    <value>Information intended to instruct readers in solving personal problems</value>
  </data>
  <data name="SelfHelp_Name" xml:space="preserve">
    <value>Self Help</value>
  </data>
  <data name="Textbook_Description" xml:space="preserve">
    <value>Reliable and detailed factual description of a thing</value>
  </data>
  <data name="Textbook_Name" xml:space="preserve">
    <value>Textbook</value>
  </data>
</root>