<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CartoonAnime_Description" xml:space="preserve">
    <value>A programme that features animated characters.</value>
  </data>
  <data name="CartoonAnime_Name" xml:space="preserve">
    <value>Anime / Cartoon</value>
  </data>
  <data name="CookingShow_Description" xml:space="preserve">
    <value>A television show that features the presentation of food in a kitchen television studio.</value>
  </data>
  <data name="CookingShow_Name" xml:space="preserve">
    <value>Cooking Show</value>
  </data>
  <data name="Documentary_Description" xml:space="preserve">
    <value>A feature or near-feature film depicting a real-world event or person, told in a journalistic style.</value>
  </data>
  <data name="Documentary_Name" xml:space="preserve">
    <value>Documentary</value>
  </data>
  <data name="Educational_Description" xml:space="preserve">
    <value>A type of program that helps kids learn their basics to go through school.</value>
  </data>
  <data name="Educational_Name" xml:space="preserve">
    <value>Educational</value>
  </data>
  <data name="GameShow_Description" xml:space="preserve">
    <value>On game shows, teams of competitors or participants called in from the audience try to solve puzzles or answer trivia questions, with prizes awarded if they win.</value>
  </data>
  <data name="GameShow_Name" xml:space="preserve">
    <value>Game Show</value>
  </data>
  <data name="KidsChildren_Description" xml:space="preserve">
    <value>TV programmes produced for children.</value>
  </data>
  <data name="KidsChildren_Name" xml:space="preserve">
    <value>Kids / Children</value>
  </data>
  <data name="Lifestyle_Description" xml:space="preserve">
    <value>A television show featuring topics such as fashion, diet, exercise, health and leisure pursuits.</value>
  </data>
  <data name="Lifestyle_Name" xml:space="preserve">
    <value>Lifestyle</value>
  </data>
  <data name="MusicTelevision_Description" xml:space="preserve">
    <value>A program where people can listen to music on their TV's. This is just like a radio station.</value>
  </data>
  <data name="MusicTelevision_Name" xml:space="preserve">
    <value>Music Television</value>
  </data>
  <data name="NewsProgramm_Description" xml:space="preserve">
    <value>News programming includes local nightly news, national daytime broadcasts on cable networks, and weekly programming that generally airs on Fridays or weekends.</value>
  </data>
  <data name="NewsProgramm_Name" xml:space="preserve">
    <value>News Programm</value>
  </data>
  <data name="RealityTV_Description" xml:space="preserve">
    <value>Reality TV tends to emphasize ordinary people rather than the big stars. Some reality shows are competitions, while others claim to show slices of real life.</value>
  </data>
  <data name="RealityTV_Name" xml:space="preserve">
    <value>Reality TV</value>
  </data>
  <data name="Religious_Description" xml:space="preserve">
    <value>Produced by religious organizations, usually with a religious message. May include church services, talk/variety shows, and dramatic films.</value>
  </data>
  <data name="Religious_Name" xml:space="preserve">
    <value>Religious</value>
  </data>
  <data name="Shopping_Description" xml:space="preserve">
    <value>Phone-in TV shows (often on shopping channels), where people can either buy featured items or bid for them.</value>
  </data>
  <data name="Shopping_Name" xml:space="preserve">
    <value>Shopping</value>
  </data>
  <data name="SoapOpera_Description" xml:space="preserve">
    <value>A television or radio drama series that typically deals with everyday events in the lives of the same group of characters.</value>
  </data>
  <data name="SoapOpera_Name" xml:space="preserve">
    <value>Soap Opera</value>
  </data>
  <data name="Sports_Description" xml:space="preserve">
    <value>Unlike many other formats, sports are often streamed live, bringing a sense of immediacy and urgency to the viewing experience.</value>
  </data>
  <data name="Sports_Name" xml:space="preserve">
    <value>Sports</value>
  </data>
  <data name="TalkShow_Description" xml:space="preserve">
    <value>Talk shows or chat shows are television shows based on discussions between presenters.</value>
  </data>
  <data name="TalkShow_Name" xml:space="preserve">
    <value>Talk Show</value>
  </data>
  <data name="TVSeries_Description" xml:space="preserve">
    <value>A group of episodes of a television program broadcast in regular intervals with a long break between each group, usually with one year between the beginning of each.</value>
  </data>
  <data name="TVSeries_Name" xml:space="preserve">
    <value>TV Series</value>
  </data>
  <data name="VarietyShow_Description" xml:space="preserve">
    <value>Variety shows highlight the talent of your guests. Variety shows include musical acts, dancing, stand-up comedy performances and comedy skits.</value>
  </data>
  <data name="VarietyShow_Name" xml:space="preserve">
    <value>Variety Show</value>
  </data>
</root>