@page "/Event"
@attribute [Authorize]
@inherits PageCore<Event.Index>
@*https://www.ehow.co.uk/12106705/types-of-dating*@
@*https://www.cupidolouco.com.br/index.php?option=com_content&view=article&id=14&Itemid=174*@
@*https://www.regain.us/advice/dating/7-types-of-dating-different-ways-to-meet-your-new-match/*@

<Row>
    <Column ColumnSize="ColumnSize.Is12.Is4.OnWidescreen">
        <Card Margin="Margin.Is3.FromBottom">
            <CardBody Padding="Padding.Is2">
                <Row>
                    <Column ColumnSize="ColumnSize.Is4">
                        <Paragraph TextAlignment="TextAlignment.Center" Margin="Margin.Is0.FromBottom">
                            <Blazorise.Icon Name="FontAwesomeIcons.EyeSlash" Class="fa-3x"></Blazorise.Icon>
                            <br />
                            Blind Date
                        </Paragraph>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is8">
                        <Paragraph TextAlignment="TextAlignment.Justified">Conheça alguem por sua essência, não sua aparência</Paragraph>
                        <Button Color="Color.Primary" Block="true" Size="Size.ExtraSmall" Clicked="FeatureUnavailable">Saiba mais</Button>
                    </Column>
                </Row>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is12.Is4.OnWidescreen">
        <Card Margin="Margin.Is3.FromBottom">
            <CardBody Padding="Padding.Is2">
                <Row>
                    <Column ColumnSize="ColumnSize.Is4">
                        <Paragraph TextAlignment="TextAlignment.Center" Margin="Margin.Is0.FromBottom">
                            <Blazorise.Icon Name="FontAwesomeIcons.UserClock" Class="fa-3x"></Blazorise.Icon>
                            <br />
                            Speed Dating
                        </Paragraph>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is8">
                        <Paragraph TextAlignment="TextAlignment.Justified">Conheça várias pessoas em encontros rápidos</Paragraph>
                        <Button Color="Color.Primary" Block="true" Size="Size.ExtraSmall" Clicked="FeatureUnavailable">Saiba mais</Button>
                    </Column>
                </Row>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is12.Is4.OnWidescreen">
        <Card Margin="Margin.Is3.FromBottom">
            <CardBody Padding="Padding.Is2">
                <Row>
                    <Column ColumnSize="ColumnSize.Is4">
                        <Paragraph TextAlignment="TextAlignment.Center" Margin="Margin.Is0.FromBottom">
                            <Blazorise.Icon Name="FontAwesomeIcons.Users" Class="fa-3x"></Blazorise.Icon>
                            <br />
                            Group Dating
                        </Paragraph>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is8">
                        <Paragraph TextAlignment="TextAlignment.Justified">Participantes com mesmos interesses e livre interação</Paragraph>
                        <Button Color="Color.Primary" Block="true" Size="Size.ExtraSmall" Clicked="FeatureUnavailable">Saiba mais</Button>
                    </Column>
                </Row>
            </CardBody>
        </Card>
    </Column>
</Row>

<Card Margin="Margin.Is3.FromBottom">
    <CardHeader>@Resources.CardHeader.EventMyEvents</CardHeader>
    <CardBody>
        <CustomVisibility Loading="MyEventsLoading" NoData="!MyEvents.Any()">

        </CustomVisibility>
    </CardBody>
</Card>

<Card Margin="Margin.Is3.FromBottom">
    <CardHeader>
        @string.Format(Resources.CardHeader.EventAvailableEvents, profile?.GetLocation(ProfileModel.LocationType.City))
        <Button Size="Size.ExtraSmall" Color="Color.Primary" Float="Float.End" Clicked="FeatureUnavailable" title="Preencher automaticamente">
            <Blazorise.Icon Name="FontAwesomeIcons.PlusCircle"></Blazorise.Icon> Novo
        </Button>
    </CardHeader>
    <CardBody>
        <CustomVisibility Loading="AllEventsLoading" NoData="!AvailableEvents.Any()">
            <Table Hoverable="true" Responsive="true" Narrow="true" FullWidth="true" Margin="Margin.Is0.FromBottom">
                <TableHeader ThemeContrast="ThemeContrast.Light">
                    <TableRow>
                        <TableHeaderCell>Tipo</TableHeaderCell>
                        <TableHeaderCell>Data / Hora</TableHeaderCell>
                        <TableHeaderCell>Cidade</TableHeaderCell>
                        <TableHeaderCell>Idade</TableHeaderCell>
                        <TableHeaderCell>Orientação</TableHeaderCell>
                        <TableHeaderCell>Intenção</TableHeaderCell>
                        <TableHeaderCell>Disponibilidade</TableHeaderCell>
                        <TableHeaderCell>#</TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    @foreach (var item in AvailableEvents)
                    {
                        <TableRow>
                            <TableRowCell>
                                <Blazorise.Icon Class="@item.GetIcon()"></Blazorise.Icon> @item.EventType.GetName()
                            </TableRowCell>
                            <TableRowCell>
                                @item.DtStart.Date.ToShortDateString() (@item.DtStart.ToLocalTime().ToShortTimeString() - @item.DtEnd.ToLocalTime().ToShortTimeString())
                            </TableRowCell>
                            <TableRowCell>@item.Location</TableRowCell>
                            <TableRowCell>@item.MinimalAge-@item.MaxAge</TableRowCell>
                            <TableRowCell>@(item.SexualOrientation.Count() > 0 ? item.SexualOrientation.First().GetName() : "-")</TableRowCell>
                                <TableRowCell>@(item.Intentions.Count() > 0 ? item.Intentions.First().GetName() : "-")</TableRowCell>
                                <TableRowCell>
                                    <Badge Color="Color.Primary">10</Badge>
                                    <Badge Color="Color.Primary"><Blazorise.Icon Name="FontAwesomeIcons.Male"></Blazorise.Icon> 5</Badge>
                                    <Badge Color="Color.Danger"><Blazorise.Icon Name="FontAwesomeIcons.Female"></Blazorise.Icon> 5</Badge>
                                </TableRowCell>
                                <TableRowCell>
                                    <Button Size="Size.ExtraSmall" Color="Color.Primary" Disabled="true">
                                        <Blazorise.Icon Name="FontAwesomeIcons.SignInAlt"></Blazorise.Icon> Inscrever
                                    </Button>
                                </TableRowCell>
                            </TableRow>
                    }
                </TableBody>
            </Table>
        </CustomVisibility>
    </CardBody>
</Card>

@code {

    private ProfileModel? profile { get; set; }
    private List<EventModel> MyEvents { get; set; } = new();
    private List<EventModel> AvailableEvents { get; set; } = new();

    private bool MyEventsLoading;
    private bool AllEventsLoading;

    protected override async Task LoadData()
    {
        MyEventsLoading = true;
        profile = await Http.Profile_Get(SessionStorage);
        MyEventsLoading = false;

        AllEventsLoading = true;
        AvailableEvents = await Http.Event_GetAll(SessionStorage);
        AllEventsLoading = false;
    }
}