@page "/Profile/PhotoValidation"
@attribute [Authorize]
@inherits PageCore<PhotoValidation>

<Row>
    <Column ColumnSize="ColumnSize.Is6.OnDesktop.Is3.WithOffset">
        <Card>
            <CardHeader>
                Validação da foto principal
                <Button Size="Size.ExtraSmall" Color="Color.Danger" Float="Float.End" Clicked="privacy.ShowModal" title="Privacidade">
                    <Blazorise.Icon Name="FontAwesomeIcons.UserShield"></Blazorise.Icon>
                </Button>
            </CardHeader>
            <CardBody>
                <video id="video" style="background-color: black; width: 100%;" autoplay muted></video>
                <img id="photo" crossorigin='anonymous' style="width: 100%; max-height: 450px !important; display: none;" />
                <div id="divMessage" class="alert alert-warning" role="alert" style="margin-bottom: 0; margin-top: 6px; padding: 6px;">
                    <span id="lblMessage">Precisamos ativar a câmera do seu dispositivo para validar sua foto principal</span>
                </div>
            </CardBody>
            <CardFooter>
                @if (ActiveCamera)
                {
                    <Button Color="Color.Danger" Clicked="FinishDetection">
                        <Blazorise.Icon Name="FontAwesomeIcons.Camera"></Blazorise.Icon> Desativar Câmera
                    </Button>
                }
                else
                {
                    <Button Color="Color.Primary" Clicked="StartDetection">
                        <Blazorise.Icon Name="FontAwesomeIcons.Camera"></Blazorise.Icon> Ativar Câmera
                    </Button>
                }
                <Button Color="Color.Primary" Clicked="TakeShot" Disabled="!ActiveCamera" Margin="Margin.Is2.FromStart">
                    <Blazorise.Icon Name="FontAwesomeIcons.Portrait"></Blazorise.Icon> Tirar Foto
                </Button>
                <Button Color="Color.Primary" Clicked="SendPhoto" Float="Float.End" Disabled="!TakedPhoto">
                    <Blazorise.Icon Name="FontAwesomeIcons.ShareSquare"></Blazorise.Icon> Enviar
                </Button>
            </CardFooter>
        </Card>
    </Column>
</Row>

<VerusDate.Web.Shared.modal.BasicModal @ref="privacy" Title="Termos de privacidade">
    <ul>
        <li>A foto tirada por sua câmera será mantida privada (não será acessível dentro da plataforma) para futura verificação, caso seja necessário;</li>
        <li>Os dados resultantes desta validação (atributos do seu rosto) não serão mantidos em nossos servidores e só existirá durante o processo de detecção;</li>
    </ul>
</VerusDate.Web.Shared.modal.BasicModal>

@code
{
    private bool ActiveCamera = false;
    private bool TakedPhoto = false;

    private Shared.modal.BasicModal? privacy;

    protected override async Task LoadData()
    {
        //do nothing
    }

    protected async Task StartDetection()
    {
        try
        {
            await JsRuntime.InvokeVoidAsync("RealDate.Face.startDetection");
            ActiveCamera = true;
        }
        catch (Exception ex)
        {
            ex.ProcessException(Toast, Logger);
        }
    }

    protected async Task FinishDetection()
    {
        try
        {
            await JsRuntime.InvokeVoidAsync("RealDate.Face.finishDetection");
            ActiveCamera = false;
        }
        catch (Exception ex)
        {
            ex.ProcessException(Toast, Logger);
        }
    }

    protected async Task TakeShot()
    {
        try
        {
            await JsRuntime.InvokeVoidAsync("RealDate.Face.takeShot");
            TakedPhoto = true;
            ActiveCamera = false;
        }
        catch (Exception ex)
        {
            ex.ProcessException(Toast, Logger);
        }
    }

    protected async Task SendPhoto()
    {
        try
        {
            await JsRuntime.InvokeVoidAsync("RealDate.Face.sendPhoto");
        }
        catch (Exception ex)
        {
            ex.ProcessException(Toast, Logger);
        }
    }
}