@inherits ComponenteCore<NavMenu>
@inject HttpClient Http

<Bar @ref="Sidebar" Mode="BarMode.VerticalInline" CollapseMode="BarCollapseMode.Hide" Breakpoint="Breakpoint.Desktop" NavigationBreakpoint="Breakpoint.Tablet" Display="Display.None.Block.OnDesktop" Background="Background.Dark" ThemeContrast="ThemeContrast.Dark">
    <BarToggler Mode="BarTogglerMode.Popout" />
    <BarBrand>
        <BarItem>
            <BarLink To="/">
                <BarIcon IconName="IconName.Heart" Margin="Margin.Is2.FromEnd" /> Verus Date
            </BarLink>
        </BarItem>
    </BarBrand>
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="/" Match="Match.All">
                    <BarIcon IconName="FontAwesomeIcons.ThLarge" /> Home
                </BarLink>
            </BarItem>
            @* <BarItem>
            <BarLink To="/Profile" Match="Match.Prefix">
            <BarIcon IconName="FontAwesomeIcons.AddressCard" /> Perfil
            </BarLink>
            </BarItem>*@
            @*<BarItem>
            <BarLink To="/Explore" Match="Match.Prefix">
            <BarIcon IconName="FontAwesomeIcons.Search" /> Explorar
            </BarLink>
            </BarItem>*@
            @if (profile?.Modality == Modality.Matchmaker)
            {
                <BarItem>
                    <BarLink To="/Event" Match="Match.Prefix">
                        <BarIcon IconName="FontAwesomeIcons.CalendarAlt" /> Eventos
                    </BarLink>
                </BarItem>
            }
            @* <BarItem>
            <BarLink To="/Store" Match="Match.Prefix">
            <BarIcon IconName="FontAwesomeIcons.ShoppingCart" /> Loja
            </BarLink>
            </BarItem>*@
            <BarItem>
                <BarLink To="/Support" Match="Match.Prefix">
                    <BarIcon IconName="FontAwesomeIcons.Bug" /> Suporte
                </BarLink>
            </BarItem>
        </BarStart>
    </BarMenu>
    <Div Style="bottom: 10px; position: absolute; width: 100%;" TextAlignment="TextAlignment.Center">
        <Badge Color="Color.Primary" Pill="true">@BuildDateString</Badge>
    </Div>
</Bar>

@code {
    [Parameter] public Bar? Sidebar { get; set; }

    private string MainPhoto = ImageHelper.GetNoUserPhoto;
    private ProfileModel? profile;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadData();

        //RefreshCore.RefreshRequestedMenu += Refresh;
    }

    //private async Task Refresh()
    //{
    //    await LoadData();
    //    StateHasChanged();
    //}

    protected async Task LoadData()
    {
        if (ComponenteUtils.IsAuthenticated)
        {
            profile = await Http.Profile_Get(SessionStorage);

            if (profile != null)
            {
                MainPhoto = profile.GetMainPhoto();
            }
        }
    }

    //https://swharden.com/blog/2020-12-29-blazor-build-info/
    private string BuildDateString => DateTime.Parse(Properties.Resources.BuildDate.ReplaceLineEndings("").Remove(Properties.Resources.BuildDate.ReplaceLineEndings("").Length - 3, 3)).ToString("yyyy.MM.dd.HH.mm");
}